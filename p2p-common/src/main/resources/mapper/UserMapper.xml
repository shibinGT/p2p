<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qhcs.ssm.dao.UserMapper" >
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
	<!-- 
		public User queryUserById(Integer id);根据ID查找用户信息
	 -->
	 
	 <select id="queryUserById" resultType="com.qhcs.ssm.entity.User">
	 	select * from sys_user where id=#{id}
	 </select>
	
	<!-- queryUserByName 根据用户名查找用户信息-->

     <select id="queryUserByName" resultType="com.qhcs.ssm.entity.User">
        select * from t_user where user_name=#{userName}
     </select>
     <!-- queryUserByName 根据手机号查找用户信息-->

     <select id="queryUserByPhone" resultType="com.qhcs.ssm.entity.User">
        select * from t_user where user_phone=#{userPhone}
     </select>
     
     <!-- public boolean addNomalUser(User user) 添加用户-->
     
     <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        insert into t_user (user_name,user_referrer,user_password,user_phone,user_status) values (#{userName},#{userReferrer},#{userPassword},#{userPhone},0)
     </insert>
     	
     	<!-- 改变状态 -->
		<update id="updateUserStatus">
		update t_user set user_status=#{userStatus} where user_name=#{userName}
		</update>
		<!-- 修改密码 -->
		<update id="updateUserPassword">
		update t_user set user_password=#{userPassword} where user_name=#{userName}
		</update>
		
	<!-- public boolean batchAdd(@Param("lists") List<User> lists);批量增加 -->
	<insert id="batchAdd">
		insert into t_user (user_name,user_password,user_real_name,user_email,user_phone,user_idcard,user_status)
		values 
		<foreach collection="lists" item="user" separator=",">
		(#{user.userName},#{user.userPassword},#{user.userRealName},#{user.userEmail},#{user.userPhone},#{user.userIdCard},0)
		</foreach>
	</insert>
	
	<!-- public List<User> queryList(@Param("userName") String userName, @Param("order") String order);根据用户名模糊查询得到列表并根据 order进行排序 -->
	<select id="queryList" resultType="com.qhcs.ssm.entity.User">
	 	select * from t_user
		<where>
			<if test="userName !=null and userName !=''">
				 <bind name="likename" value="'%'+userName+'%'"/>
				  and user_name like #{likename}
			</if>
		</where>
		<if test="order !=null and order != '' ">
			order by ${order}
		</if>	 	
	 </select>
	 
	 
	 <!-- public boolean freeze(@Param("userId") Integer userId,@Param("status") Integer status);根据用户的id对用户的状态进行改变 -->
	 <update id="freeze">
	 	update t_user set user_status=#{status} where user_id=#{userId}
	 </update>
	 
	
</mapper>