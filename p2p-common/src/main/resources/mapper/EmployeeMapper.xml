<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qhcs.ssm.dao.EmployeeMapper" >
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
	<!-- 
		public Employee queryUserById(Integer id);
	 -->
	 
	 <select id="queryUserById" resultType="com.qhcs.ssm.entity.Employee">
	 	select * from t_employee where employee_id=#{employeeId}
	 </select>
	
	<!-- queryUserByName -->

     <select id="queryUserByName" resultType="com.qhcs.ssm.entity.Employee">
        select * from t_employee where employee_account_number=#{employeeAccountNumber}
     </select>
     
     <!-- public boolean addNomalUser(User user) -->
     
     <insert id="addNomalUser" useGeneratedKeys="true" keyProperty="employeeId">
        insert into t_employee (employee_account_number,employee_password) values (#{employeeAccountNumber},#{employeePassword})
     </insert>
     	
     	
<!--     public boolean addNomalUserRole(Long id);
    
    <insert id="addNomalUserRole">
        insert into sys_user_role (uid,rid) values (#{id},2)
     </insert> -->
     
     
   <!--  public boolean addAdminRole(Integer uid, Integer rid); -->
   
		<insert id="addAdminRole">
		        insert into t_employee_role (employee_id,role_id) values(#{uid},#{rid})
		</insert>
	<!-- 
		public List<Emloyee> queryList(Employee employee,String order);
	 -->
	 
	 <select id="queryList" resultType="com.qhcs.ssm.entity.Employee">
	 	select * from t_employee 
		<where>
			<if test="employee.employeeAccountNumber!=null and employee.employeeAccountNumber!=''">
				 <bind name="likename" value="'%'+employee.employeeAccountNumber+'%'"/>
				  and employee_account_number like #{likename}
			</if>
		</where>
		<if test="order !=null and order != '' ">
			order by ${order}
		</if>	 	
	 </select>
	 
	 <delete id="del">
	 	delete from t_employee where employee_id=#{employeeId}
	 </delete>

	 <delete id="delUserRole" >
	 	delete from t_employee_role where employee_id=#{employeeId}
	 </delete>
	 <!-- public boolean batchDelUserRole(@Param("lists") Integer[] lists); -->
	 <delete id="batchDelUserRole">
	 	delete from t_employee_role where employee_id in 
	 		<foreach item="id" collection="lists" open="(" separator="," close=")">
                #{id}
            </foreach>
	 </delete>
	 
	 <!-- public boolean delUserGroup(Integer id);根据id删除用户的分组信息 -->
	 <delete id="delUserGroup" >
	 	delete from t_group_employee where employee_id=#{id}
	 </delete>
	 <!-- public boolean batchDelUserGroup(@Param("lists") Integer[] lists); -->
	 <delete id="batchDelUserGroup">
	 	delete from t_group_employee where employee_id in 
	 		<foreach item="id" collection="lists" open="(" separator="," close=")">
                #{id}
            </foreach>
	 </delete>
	 
	 <!--  public boolean queryRole(); -->
	 <select id="queryRole" resultType="com.qhcs.ssm.entity.Role">
	 	select * from t_role
	 </select>
	 
	 
	 <!-- public boolean batchDel(@Param("lists") Integer[] lists);批量删除用户 -->
	 <delete id="batchDel">
	 	delete from t_employee where employee_id in 
	 		<foreach item="id" collection="lists" open="(" separator="," close=")">
                #{id}
            </foreach>
	 </delete>
	 
	 
	 <!-- public boolean updatePassword(@Param("id") Integer id, @Param("npsw") String newPassword);重置密码为123456 -->
	 <update id="updatePassword">
	 	update t_employee set employee_password = #{npsw} where employee_id = #{id}
	 </update>
	 
	 
	 <!-- public boolean batchAdd(@Param("list") List<Employee> list);批量上传增加员工 -->
	 <insert id="batchAdd" useGeneratedKeys="true" keyProperty="employeeId">
	 	insert into t_employee (employee_account_number,employee_password,employee_real_name,employee_phone)
	 	values
			<foreach collection="list" item="employee"   separator="," >
				(#{employee.employeeAccountNumber},#{employee.employeePassword},#{employee.employeeRealName},#{employee.employeePhone})
			</foreach>
	 </insert>
	 
	 <!-- public boolean batchAddRole(@Param("list") List<Employee> list);批量增加普通角色 -->
	 <insert id="batchAddRole">
        insert into t_employee_role (employee_id,role_id) values 
        	<foreach collection="list" item="employee"   separator="," >
				(#{employee.employeeId},2)
			</foreach>
     </insert>
	
</mapper>